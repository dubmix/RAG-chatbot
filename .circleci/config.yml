# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference

# For a detailed guide to building and testing with Python, read the docs:
# https://circleci.com/docs/language-python/ for more details
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # See the Python orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@2.1.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
commands:
  poetry-install:
    description: Setup Poetry and install dependencies
    steps:
      - run:
          name: Install Poetry
          command: |
            apt update --yes --no-install-recommends
            apt install --yes build-essential git openssh-client apt-transport-https libpoppler-cpp-dev pkg-config
            pip install poetry==1.7.1
      - run:
          name: Install dependencies
          command: |
            poetry config --local virtualenvs.create true
            poetry config --local virtualenvs.in-project true
            poetry install --no-interaction --no-root
          working_directory: api

jobs:
  pre-commit:
    docker:
      - image: python:3.11-slim
    steps:
      - run: apt update --yes --no-install-recommends && apt install --yes git
      - checkout
      - run: 
          name: Install pre-commit
          command: | 
            pip install pre-commit
            pre-commit install
      - poetry-install
      - run:
          name: Run pre-commit
          command: pre-commit run --all-files

  test:
    docker:
      - image: python:3.11-slim
      - image: pierrealexandredelannoy959/chromadb:circleci
    steps:
      - run: apt update --yes --no-install-recommends
      - checkout
      - poetry-install
      - run:
          name: Run tests
          working_directory: api
          command: poetry run pytest

workflows:
  build_and_test:
    jobs:
      - pre-commit:
          name: Pre-Commit Checks
      - test:
          name: Test
          requires:
            - Pre-Commit Checks
